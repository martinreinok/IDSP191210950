# -----------------------------------------------------------------------------
# (C) Bibix
# The content below includes confidential, proprietary information of
# Bibix. All use, disclosure, and/or reproduction is prohibited
# unless authorized in writing. All rights reserved.
# -----------------------------------------------------------------------------
# File         : slicer.arx
# Description  : slicer for GFSK demo
# Author       : Sabih Gerez, Bibix
#                based on work by Rene Moll (DSE)
# Creation date: December 7, 2011
# -----------------------------------------------------------------------------
# $Rev: 1$
# $Author: gerezsh$
# $Date: Sun Mar 12 23:52:34 CET 2023$
# $Log$
# -----------------------------------------------------------------------------


# -----------------------------------------------------------------------------
# Slicer
# 
# Determines the correct symbol based on DAM output
# -----------------------------------------------------------------------------

component top
  # Generic - settings
  # - Datapath - internal
  IN_WL  : generic integer = 7
  IN_IWL : generic integer = 1
  # - Oversampling factor
  Nos : generic integer = 4

  # Generic - types
  T_IN    : generic type = signed(IN_WL, IN_IWL)
  T_offset: generic type = unsigned(ceil(log2(Nos)))

  # Ports
  data_in: in T_IN
  offset : in T_offset

  data_out: out bit

type
  # intermediate types for adder tree
  T1: signed(IN_WL+1, IN_IWL+1)
  T2: signed(IN_WL+2, IN_IWL+2)

register
  # fifo of input samples
  slicer_fifo: array[Nos-1] of T_IN = 0
  # counter on behalf of right sync moment
  counter: T_offset = 0
  # output
  output: bit = 0

variable
  sum0_1, sum2_3: T1
  sum0_1_2_3: T2

begin
  # Sum all stored samples
  sum0_1 = data_in + slicer_fifo[0]
  sum2_3 = slicer_fifo[1] + slicer_fifo[2]
  sum0_1_2_3 = sum0_1 + sum2_3

  # slice at appropriate time
  if (counter == offset)
     if (sum0_1_2_3 > 0)
       output = 1
     else
       output = 0
     end
  end

  # update counter 
  # (assume that number of samples per symbol is power of 2)
  counter = counter + 1

  # update fifo
  slicer_fifo[0] = data_in;

  for n in 1:(Nos-2)
    slicer_fifo[n] = slicer_fifo[n-1]
  end

  # connect output
  data_out = output
end
